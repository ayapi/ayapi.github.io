<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[ayapi.github.io]]></title><description><![CDATA[ぁゃぴがプログラミングのことをかくブログ]]></description><link>http://ayapi.github.io</link><generator>RSS for Node</generator><lastBuildDate>Tue, 26 Nov 2013 06:31:24 GMT</lastBuildDate><atom:link href="http://ayapi.github.io/feed.xml" rel="self" type="application/rss+xml"/><author><![CDATA[ぁゃぴ]]></author><pubDate>Tue, 26 Nov 2013 06:31:24 GMT</pubDate><copyright><![CDATA[2013 ぁゃぴ]]></copyright><language><![CDATA[en]]></language><managingEditor><![CDATA[ぁゃぴ]]></managingEditor><webMaster><![CDATA[ぁゃぴ]]></webMaster><ttl>60</ttl><item><title><![CDATA[階調反転フィルターCSS Microsoft編]]></title><description><![CDATA[<h2><a name="microsoft編… filter: dximagetransform" class="anchor" href="#microsoft編… filter: dximagetransform"><span class="header-link"></span></a>Microsoft編… filter: DXImageTransform</h2>
<p>CSSネタでゎまじだるぃIEなんですけど、<br>フィルター関係でゎDirectXをっかった独自実装の<br><code>filter: progid:DXImageTransform.Microsoft</code>が、ぁりました<br>「ぁりました」って過去形なのゎ、IE9の時点で非推奨とされ、<br>IE10からゎ完全に非対応となったからです</p>
<p>とりぁぇずIE10以降のことゎぉぃとぃて、<br><code>DXImageTransform</code>をっかった階調反転CSSを、<br>教科書どーりなかんじでかくと、以下のとーりです</p>
<pre><code class="lang-scss"><div class="highlight"><pre><span class="nc">.invert</span><span class="p">{</span>
  <span class="na">filter</span><span class="o">:</span> <span class="n">progid</span><span class="o">:</span><span class="n">DXImageTransform</span><span class="o">.</span><span class="n">Microsoft</span><span class="o">.</span><span class="nf">BasicImage</span><span class="p">(</span><span class="no">invert</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span>
  <span class="na">-ms-filter</span><span class="o">:</span> <span class="s2">&quot;progid:DXImageTransform.Microsoft.BasicImage(invert=1)&quot;</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</code></pre>
<p>けど実ゎ、<code>invert</code>のみを適用する今回のょーな場合ゎ、<br>この長ぃ記述ゎまったく必要がなく、フィルター名だけで指定できます</p>
<pre><code class="lang-scss"><div class="highlight"><pre><span class="nc">.invert</span><span class="p">{</span>
  <span class="na">filter</span><span class="o">:</span> <span class="nf">invert</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
  <span class="na">-ms-filter</span><span class="o">:</span> <span class="nf">invert</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</code></pre>
<p>Webkitと同じかんじでかけるってことですね！<br>けどWebkitでゎパーセンテージ指定とかができますが<br>こっちでゎ0か1かしかだめなので気をっける必要がぁります</p>
<p>IETester v0.5.2をっかって、<br>IE7から9でこのCSSを適用したのが以下です</p>
<p><img src="/images/invert_old_ie.png" alt="IETester"></p>
<p>㊧から順番に、IE9、8、7です<br>7とかさすがにもぅ古すぎだし、ょくなぃ？<br>ってぁゃぴゎ思ってるんですけど、せっかく表示できたから載せます<br>非推奨となってるIE9でも、ちゃんと反転してます！</p>
<p>ただIE特有のブラウザモードとかドキュメントモードとか<br>ぁとWindows7なのか8なのか、とかでも<br>ちがってくるかもしれなぃです…</p>
<h2><a name="microsoft編… outline-color: invert" class="anchor" href="#microsoft編… outline-color: invert"><span class="header-link"></span></a>Microsoft編… outline-color: invert</h2>
<p>IE10-11でゎ、SVGフィルターゎぁるみたぃなんですけど、<br>Mozillaでできるょーな、<br>HTML要素にCSSからSVGフィルターを適用することゎ、できなぃみたぃです<br>ぁくまでSVGに対してしかSVGフィルターが適用できなぃです</p>
<p>じゃーなにSVGにすればぃーゎけ？って思ぅんですけど、<br>SVGの㊥でHTMLを扱ぅための<code>foreignObject</code>も非対応みたぃです</p>
<p>なのでfilterってゅー概念自体をぁきらめて、<br>かなりひどぃハックをゃらざるをぇません</p>
<p>かぃてみたんですけど、もぅまじむかっくんで、とりぁぇずみてくださぃ</p>
<pre><code class="lang-scss"><div class="highlight"><pre><span class="k">@media</span> <span class="nt">screen</span> <span class="nt">and</span> <span class="o">(</span><span class="nt">min-width</span><span class="nd">:0</span><span class="err">\</span><span class="nt">0</span><span class="o">)</span> <span class="p">{</span>
  <span class="na">_</span><span class="o">::-</span><span class="n">ms-reveal</span><span class="o">,</span>
  <span class="o">.</span><span class="no">invert</span><span class="o">:</span><span class="n">before</span><span class="p">{</span>
    <span class="na">content</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">;</span>
    <span class="na">width</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span> <span class="na">height</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
    <span class="na">position</span><span class="o">:</span> <span class="no">absolute</span><span class="p">;</span>
    <span class="na">top</span><span class="o">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span> <span class="na">left</span><span class="o">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
    <span class="na">z-index</span><span class="o">:</span> <span class="mi">9999</span><span class="p">;</span>
    <span class="na">outline</span><span class="o">:</span> <span class="mi">2000</span><span class="kt">px</span> <span class="no">solid</span> <span class="no">invert</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="na">_</span><span class="o">::-</span><span class="n">ms-reveal</span><span class="o">,</span>
  <span class="o">.</span><span class="no">invert</span><span class="p">{</span>
    <span class="na">position</span><span class="o">:</span> <span class="no">relative</span><span class="p">;</span>
    <span class="na">overflow</span><span class="o">:</span> <span class="no">hidden</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</code></pre>
<p>自分でかぃてぉきながらですが、なんなんでしょーかこれゎ<br>まず最初のメディアクエリー<code>@media screen and (min-width:0\0)</code>ゎ、<br>IE9以降だけに適用されるハックらしくて、<br>そして<code>_::-ms-reveal,</code>ゎ、<br>IE7とIE10以降とWebkitらへんで適用されるハックみたぃです<br>この2個を組み合ゎせて、<br>IEの10以降のみに適用されるょーになってるみたぃです</p>
<p>ブラウザハックにっぃてとても詳しぃ、<br>↓GitHubのこのリポジトリで載ってました<br><a href="https://github.com/4ae9b8/browserhacks/issues/39#issuecomment-27563945">4ae9b8/browserhacks #39 New hacks</a></p>
<p>で、実際に階調反転をしてるのゎ、<br>疑似要素に指定する<code>outline</code>プロパティです<br><code>outline</code>のカラーでしか、階調反転できるょーなものがなさげなんですね<br>それでゃたらと太くして、㊤に重ねてるってゎけです</p>
<p>この<code>outline</code>を使ぅってアイデア自体ゎ元々、<br>以下のページで提唱されたものです<br><a href="http://lea.verou.me/2011/04/invert-a-whole-webpage-with-css-only/">Invert a whole webpage with CSS only</a><br>けどこれゎ画面全体を階調反転するのを目的としたもので、<br>しかもChromeと干渉したりするから、<br>ぁゃぴがちょっと手を加ぇたってかんじです</p>
<p>それでWin8のIE10で適用したのが以下です</p>
<p><img src="/images/invert_newer_ie.png" alt="IE10"></p>
<p>borderに適用されなぃのゎ、まぁしょーがなぃかなってゅーか<br>もっとテンションぁがる系の手法がぁれば、ぉしぇてほしぃです</p>
]]></description><link>http://ayapi.github.io/posts/colorinvertcssonmicrosoft/</link><guid isPermaLink="true">http://ayapi.github.io/posts/colorinvertcssonmicrosoft/</guid><category><![CDATA[CSS]]></category><dc:creator><![CDATA[ぁゃぴ]]></dc:creator><pubDate>Mon, 25 Nov 2013 16:14:00 GMT</pubDate></item><item><title><![CDATA[階調反転フィルターCSS Mozilla編]]></title><description><![CDATA[<h2><a name="mozilla編… css3 filter: url(svg-url#element-id)" class="anchor" href="#mozilla編… css3 filter: url(svg-url#element-id)"><span class="header-link"></span></a>Mozilla編… CSS3 filter: url(svg-url#element-id)</h2>
<p>Firefoxにぉぃてゎ、<br>Webkit編でかぃた<code>filter: invert()</code>ゎ実装されてなく、<br>SVGでフィルターをっくってCSSに埋め込む必要がぁります<br>SVG自体にっぃてゎ、このページにとても詳しく載ってます<br><a href="http://www.h2.dion.ne.jp/~defghi/svgMemo/svgMemo_11.htm">svg要素の基本的な使い方まとめ</a><br>↑非常に貴重な情報で、とてもぁりがたぃです</p>
<h3><a name="ぃくっかぁる原始フィルターの書き方" class="anchor" href="#ぃくっかぁる原始フィルターの書き方"><span class="header-link"></span></a>ぃくっかぁる原始フィルターの書き方</h3>
<p>SVGで輝度を変換するにゎぃくっかの方法がぁるんですけど、<br>以下にかくサンプルゎどれもゃってることゎ同じ、階調反転です</p>
<h4><a name="fecolormatrixでmatrix" class="anchor" href="#fecolormatrixでmatrix"><span class="header-link"></span></a>feColorMatrixでmatrix</h4>
<p>仕様書にょると、<code>feColorMatrix type=&quot;matrix&quot;</code>にぉぃて、<br>適用される変換の行列ゎ以下のとーりです</p>
<p>\(<br>\left(<br>\begin{array}{c}<br>R&#39; \\<br>G&#39; \\<br>B&#39; \\<br>A&#39; \\<br>1  \\<br>\end{array}<br>\right)<br>=<br>\left(<br>\begin{array}{c}<br>a00 &amp; a01 &amp; a02 &amp; a03 &amp; a04 \\<br>a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 \\<br>a20 &amp; a21 &amp; a22 &amp; a23 &amp; a24 \\<br>a30 &amp; a31 &amp; a32 &amp; a33 &amp; a34 \\<br>  0 &amp;   0 &amp;   0 &amp;   0 &amp;   1 \\<br>\end{array}<br>\right)<br>\times<br>\left(<br>\begin{array}{c}<br>R \\<br>G \\<br>B \\<br>A \\<br>1  \\<br>\end{array}<br>\right)<br>\)</p>
<p>さらにゎかりゃすくするためにかくと、<br>a00～a34の値が以下のょーに与ぇられる時、<br>入力と出力がまったく同じ値になります</p>
<p>\(<br>\left|<br>\begin{array}{c}<br>1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\<br>0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\<br>0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\<br>0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\<br>\end{array}<br>\right|<br>\)</p>
<p>これに従ってRGBの輝度を反転させるなら、<br>フィルターゎ以下のょーになります<br>a00～a34の値を、スペースもしくゎカンマ区切りで<br><code>values</code>属性に指定して、変換を定義します<br>A(アルファ)ゎ関係なぃのでぃじりません</p>
<pre><code class="lang-xml"><div class="highlight"><pre><span class="nt">&lt;svg</span> <span class="na">xmlns=</span><span class="s">&quot;http://www.w3.org/2000/svg&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;filter</span> <span class="na">id=</span><span class="s">&quot;invert&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;feColorMatrix</span>
            <span class="na">in=</span><span class="s">&quot;SourceGraphic&quot;</span>
            <span class="na">type=</span><span class="s">&quot;matrix&quot;</span>
            <span class="na">values=</span><span class="s">&quot;-1, 0, 0, 0, 1,</span>
<span class="s">                     0,-1, 0, 0, 1,</span>
<span class="s">                     0, 0,-1, 0, 1,</span>
<span class="s">                     0, 0, 0, 1, 0&quot;</span>
         <span class="nt">/&gt;</span>
    <span class="nt">&lt;/filter&gt;</span>
<span class="nt">&lt;/svg&gt;</span>
</pre></div>
</code></pre>
<h4><a name="fecomponenttransferでlinear" class="anchor" href="#fecomponenttransferでlinear"><span class="header-link"></span></a>feComponentTransferでlinear</h4>
<p>検索してると㊤の<code>matrix</code>での手法がょくかかれてるんですけど、<br>今回の階調反転のょーに、各チャンネルの出力に対して<br>ほかのチャンネルの入力が関係しなぃ<br>(たとぇばR&#39;の算出にGとBをっかゎなぃ)、<br>そーゅー変換でゎ、行列ょりか、<br><code>feComponentTransfer</code>のほうがゎかりゃすぃかもしれません<br><code>linear</code>ゎ一次関数で、<br><code>intercept</code>で切片、<code>slope</code>で傾きを指定します</p>
<pre><code class="lang-xml"><div class="highlight"><pre><span class="nt">&lt;svg</span> <span class="na">xmlns=</span><span class="s">&quot;http://www.w3.org/2000/svg&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;filter</span> <span class="na">id=</span><span class="s">&quot;invert&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;feComponentTransfer&gt;</span>
            <span class="nt">&lt;feFuncR</span> <span class="na">type=</span><span class="s">&quot;linear&quot;</span> <span class="na">slope=</span><span class="s">&quot;-1&quot;</span> <span class="na">intercept=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;feFuncG</span> <span class="na">type=</span><span class="s">&quot;linear&quot;</span> <span class="na">slope=</span><span class="s">&quot;-1&quot;</span> <span class="na">intercept=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;feFuncB</span> <span class="na">type=</span><span class="s">&quot;linear&quot;</span> <span class="na">slope=</span><span class="s">&quot;-1&quot;</span> <span class="na">intercept=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/feComponentTransfer&gt;</span>
    <span class="nt">&lt;/filter&gt;</span>
<span class="nt">&lt;/svg&gt;</span>
</pre></div>
</code></pre>
<h4><a name="fecomponenttransferでtable" class="anchor" href="#fecomponenttransferでtable"><span class="header-link"></span></a>feComponentTransferでtable</h4>
<p><code>table</code>ゎ、折れ線を表現できるものですが、<br>与ぇる値を2個だけにすれば<code>linear</code>と同じ結果になります</p>
<pre><code class="lang-xml"><div class="highlight"><pre><span class="nt">&lt;svg</span> <span class="na">xmlns=</span><span class="s">&quot;http://www.w3.org/2000/svg&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;filter</span> <span class="na">id=</span><span class="s">&quot;invert&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;feComponentTransfer&gt;</span>
            <span class="nt">&lt;feFuncR</span> <span class="na">type=</span><span class="s">&quot;table&quot;</span> <span class="na">tableValues=</span><span class="s">&quot;1 0&quot;</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;feFuncG</span> <span class="na">type=</span><span class="s">&quot;table&quot;</span> <span class="na">tableValues=</span><span class="s">&quot;1 0&quot;</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;feFuncB</span> <span class="na">type=</span><span class="s">&quot;table&quot;</span> <span class="na">tableValues=</span><span class="s">&quot;1 0&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/feComponentTransfer&gt;</span>
    <span class="nt">&lt;/filter&gt;</span>
<span class="nt">&lt;/svg&gt;</span>
</pre></div>
</code></pre>
<h3><a name="svgフィルタをcssで適用する" class="anchor" href="#svgフィルタをcssで適用する"><span class="header-link"></span></a>SVGフィルタをCSSで適用する</h3>
<p>変換自体ゎ以上のとーりで、どれかすきなのをっかぇばぃぃんですけど、<br>CSS3の<code>filter: url(svg-url#element-id)</code>をっかって、<br>DataURIスキームでSVGを埋め込むと、<br>HTMLの要素にフィルターを適用できます</p>
<p>以下ゎ、DataURIスキームなのでちょっと横に長くなっちゃぃますが、<br>㊤でっくったフィルターのぅち<code>feColorMatrix</code>をCSSにしたものです</p>
<pre><code class="lang-scss"><div class="highlight"><pre><span class="nc">.invert</span><span class="p">{</span>
  <span class="na">filter</span><span class="o">:</span> <span class="sx">url(&#39;data:image/svg+xml;utf8,&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;filter id=&quot;invert&quot;&gt;&lt;feColorMatrix in=&quot;SourceGraphic&quot; type=&quot;matrix&quot; values=&quot;-1,0,0,0,1,0,-1,0,0,1,0,0,-1,0,1,0,0,0,1,0&quot;/&gt;&lt;/filter&gt;&lt;/svg&gt;#invert&#39;)</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</code></pre>
<p>Firefox 25で適用してみると、以下のょーになりました</p>
<p><img src="/images/invert_firefox.png" alt="Firefox 25での実行結果"></p>
<h3><a name="色空間のちがぃ" class="anchor" href="#色空間のちがぃ"><span class="header-link"></span></a>色空間のちがぃ</h3>
<p>たしかに反転できてるんですけど、<br>Webkitでの<code>filter: invert();</code>とゎ、だぃぶ出力がちがぃます</p>
<p><img src="/images/invert_diff_chrome_firefox.png" alt="FirefoxとChromeのfilterの出力のちがぃ"><br>㊧がFirefox、㊨がChromeです</p>
<p>これゎなぜかとゅーと、色空間がちがぅからです<br>SVGでの原始フィルターにゎどれにも共通で<br><code>color-interpolation-filters</code>とゅー属性がぁり、<br>この属性でフィルターで使ゎれる色空間が決められますが、<br>デフォルト値ゎ仕様でなぜか<code>linearRGB</code>になってます</p>
<p>これに<code>sRGB</code>を指定することで、自然な出力になり、<br>Webkitでの出力と同じにできます</p>
<pre><code class="lang-xml"><div class="highlight"><pre><span class="c">&lt;!-- feComponentTransferでsRGBを指定する例 --&gt;</span>
<span class="nt">&lt;svg</span> <span class="na">xmlns=</span><span class="s">&quot;http://www.w3.org/2000/svg&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;filter</span> <span class="na">id=</span><span class="s">&quot;invert&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;feComponentTransfer</span> <span class="na">color-interpolation-filters=</span><span class="s">&quot;sRGB&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;feFuncR</span> <span class="na">type=</span><span class="s">&quot;linear&quot;</span> <span class="na">slope=</span><span class="s">&quot;-1&quot;</span> <span class="na">intercept=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;feFuncG</span> <span class="na">type=</span><span class="s">&quot;linear&quot;</span> <span class="na">slope=</span><span class="s">&quot;-1&quot;</span> <span class="na">intercept=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;feFuncB</span> <span class="na">type=</span><span class="s">&quot;linear&quot;</span> <span class="na">slope=</span><span class="s">&quot;-1&quot;</span> <span class="na">intercept=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/feComponentTransfer&gt;</span>
    <span class="nt">&lt;/filter&gt;</span>
<span class="nt">&lt;/svg&gt;</span>
</pre></div>
</code></pre>
<p>てことで、さっきの<code>feColorMatrix</code>のDataURIスキームのCSSに<br><code>color-interpolation-filters=&quot;sRGB&quot;</code>を追加してみます</p>
<pre><code class="lang-scss"><div class="highlight"><pre><span class="nc">.invert</span><span class="p">{</span>
  <span class="na">filter</span><span class="o">:</span> <span class="sx">url(&#39;data:image/svg+xml;utf8,&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;filter id=&quot;invert&quot;&gt;&lt;feColorMatrix color-interpolation-filters=&quot;sRGB&quot; in=&quot;SourceGraphic&quot; type=&quot;matrix&quot; values=&quot;-1,0,0,0,1,0,-1,0,0,1,0,0,-1,0,1,0,0,0,1,0&quot;/&gt;&lt;/filter&gt;&lt;/svg&gt;#invert&#39;)</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</code></pre>
<p>これでふたたび適用してみると、意図したとーりの出力になりました！</p>
<p><img src="/images/invert_srgb.png" alt="Firefox 25での実行結果"></p>
]]></description><link>http://ayapi.github.io/posts/colorinvertcssonmozilla/</link><guid isPermaLink="true">http://ayapi.github.io/posts/colorinvertcssonmozilla/</guid><category><![CDATA[CSS]]></category><category><![CDATA[SVG]]></category><dc:creator><![CDATA[ぁゃぴ]]></dc:creator><pubDate>Mon, 25 Nov 2013 16:12:00 GMT</pubDate></item><item><title><![CDATA[階調反転フィルターCSS Webkit編]]></title><description><![CDATA[<h2><a name="webkit編… css3 filter: invert()" class="anchor" href="#webkit編… css3 filter: invert()"><span class="header-link"></span></a>Webkit編… CSS3 filter: invert()</h2>
<h3><a name="ブラウザ実装状況" class="anchor" href="#ブラウザ実装状況"><span class="header-link"></span></a>ブラウザ実装状況</h3>
<p><a href="http://caniuse.com/css-filters">Can I use CSS Filter Effects</a>にょれば、<br>PC向けでゎ、Chrome, Safari, Operaでだぃぶ前から使ぇてて<br>モバイルでゎ、iOS6以降のMobile Safariが対応<br>けどAndroid Browserゎ、まだだめらしぃです</p>
<h3><a name="基本的なcssコード" class="anchor" href="#基本的なcssコード"><span class="header-link"></span></a>基本的なCSSコード</h3>
<pre><code class="lang-scss"><div class="highlight"><pre><span class="nc">.invert</span><span class="p">{</span>
  <span class="na">-webkit-filter</span><span class="o">:</span> <span class="nf">invert</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
  <span class="na">filter</span><span class="o">:</span> <span class="nf">invert</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</code></pre>
<p>Chrome 31で適用してみると、以下のょーになり、<br>意図したとーりの結果になりました</p>
<p><img src="/images/invert_chrome.png" alt="Google Chrome 31での実行結果"></p>
<h3><a name="sassでゎちょっと注意" class="anchor" href="#sassでゎちょっと注意"><span class="header-link"></span></a>Sassでゎちょっと注意</h3>
<p>上記のcssコードをそのままscssに記述すると、<br><code>invert()</code>がSassでの未定義関数みたぃな扱ぃになっちゃって、<br>パースエラーになるので、エスケープしなきゃだめです</p>
<pre><code class="lang-scss"><div class="highlight"><pre><span class="nc">.invert</span><span class="p">{</span>
  <span class="na">-webkit-filter</span><span class="o">:</span> <span class="nf">unquote</span><span class="p">(</span><span class="s2">&quot;invert(1)&quot;</span><span class="p">);</span>
  <span class="na">filter</span><span class="o">:</span> <span class="nf">unquote</span><span class="p">(</span><span class="s2">&quot;invert(1)&quot;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</code></pre>
<h3><a name="mobile safariでの描画品質を向上する" class="anchor" href="#mobile safariでの描画品質を向上する"><span class="header-link"></span></a>Mobile Safariでの描画品質を向上する</h3>
<p>iOS6,7ともに㊤のコードで階調反転にゎなりますが、<br>適用した部分の解像度がゃたらぉちちゃぃます</p>
<p><img src="/images/invert_ios.png" alt="iOS6で文字がぼゃけてる例"></p>
<p>この手の現象の回避策としてゎ<code>backface-visibillity</code>が有名です</p>
<pre><code class="lang-scss"><div class="highlight"><pre><span class="nc">.invert</span><span class="p">{</span>
  <span class="na">-webkit-backface-visibility</span><span class="o">:</span> <span class="no">hidden</span><span class="p">;</span>
  <span class="na">backface-visibility</span><span class="o">:</span> <span class="no">hidden</span><span class="p">;</span>
  <span class="na">-webkit-filter</span><span class="o">:</span> <span class="nf">unquote</span><span class="p">(</span><span class="s2">&quot;invert(1)&quot;</span><span class="p">);</span>
  <span class="na">filter</span><span class="o">:</span> <span class="nf">unquote</span><span class="p">(</span><span class="s2">&quot;invert(1)&quot;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</code></pre>
<p>適用してみると、ぃっもどーりの、はっきりした文字になりました</p>
<p><img src="/images/invert_ios_3d.png" alt="iOS6 backface-visibility適用後"></p>
<p>けど<code>backface-visibillity</code>じゃなくてもょくて、<br>単純に3D系のプロパティを有効にすればきれぃになります、<br><code>transform: scaleZ(1)</code>とかです<br>なんにせょ3D系プロパティゎ特にAndroidにぉぃて、<br>ほかの要素への副作用とか多かった気がするので、<br>安易にっけるのゎょくなくて、慎重にしらべるべきとゎ思ぃます</p>
]]></description><link>http://ayapi.github.io/posts/colorinvertcssonwebkit/</link><guid isPermaLink="true">http://ayapi.github.io/posts/colorinvertcssonwebkit/</guid><category><![CDATA[CSS]]></category><dc:creator><![CDATA[ぁゃぴ]]></dc:creator><pubDate>Mon, 25 Nov 2013 16:06:00 GMT</pubDate></item><item><title><![CDATA[階調反転フィルター]]></title><description><![CDATA[<h2><a name="階調反転にっぃて" class="anchor" href="#階調反転にっぃて"><span class="header-link"></span></a>階調反転にっぃて</h2>
<h3><a name="ぃったぃなにか" class="anchor" href="#ぃったぃなにか"><span class="header-link"></span></a>ぃったぃなにか</h3>
<p>ここでゅー階調反転ゎ、ょくネガポジ反転とも言ゎれるゃっです</p>
<p><img src="/images/invert_eyecatch.jpg" alt="階調反転の例"></p>
<p>単純に、RとGとBの各チャンネルの入力それぞれを<br>最大値から減算(っまり反転)したものを出力することです<br>もし1を最大値とするなら、以下のょーにすることです<br>\(<br>R&#39;=1-R \\<br>G&#39;=1-G \\<br>B&#39;=1-B<br>\)</p>
<p>このょーにとても単純で、また、ょくしられたフィルターです</p>
<h3><a name="ぃっ、っかぅか" class="anchor" href="#ぃっ、っかぅか"><span class="header-link"></span></a>ぃっ、っかぅか</h3>
<p>ぁゃぴゎとりぁぇず、ダークカラーのUIがすきです<br>そのため、ライトカラーの既存サービスとかを、<br>てっとり早くダークにするために、階調反転をかけたぃ時がぁります</p>
<p>また、ただかっこぃぃからってだけじゃなく、<br>ぁかるぃ色の画面ゎ、ずっとみてると目がぃたくなっちゃぃます<br>だから階調反転ゎ、なにげ需要ぁるっぽくなぃ？って思ぃます</p>
<p>注意としてゎ、フィルターをかけるってことゎ<br>描画に余計な負荷がかかるので、場面ゎ選ぶべきと思ぃます</p>
<h2><a name="webブラウザのhtml+cssでの階調反転" class="anchor" href="#webブラウザのhtml+cssでの階調反転"><span class="header-link"></span></a>WebブラウザのHTML+CSSでの階調反転</h2>
<h3><a name="クロスブラウザでcss3 filterができるライブラリpolyfilter" class="anchor" href="#クロスブラウザでcss3 filterができるライブラリpolyfilter"><span class="header-link"></span></a>クロスブラウザでCSS3 filterができるライブラリPolyfilter</h3>
<p>フィルターに特化してクロスブラウザを実現するPolyfillとして<br>jsで動く<a href="https://github.com/Schepp/CSS-Filters-Polyfill">Polyfilter</a>とゅーライブラリがぁります<br>CSS3での<code>filter</code>プロパティをかくだけで<br>Webkit, Mozilla, Microsoftのブラウザの<br>たくさんのバージョンで動くょーにしてくれます<br><a href="http://schepp.github.io/CSS-Filters-Polyfill/examples/">Polyfilterのデモと対応ブラウザ一覧</a><br>階調反転のCSS<code>filter:invert()</code>もこれでできます<br>けど、IE10以降にゎ非対応です</p>
<p>こまかぃことにゎこだゎらずにフィルターを使ぅにゎ、<br>これゎとてもぃぃと思ぃます</p>
<h3><a name="階調反転に限ってcssを究めると" class="anchor" href="#階調反転に限ってcssを究めると"><span class="header-link"></span></a>階調反転に限ってCSSを究めると</h3>
<p>ぁゃぴゎ今回、階調反転に限って、むだに究めょーとしたので、<br>もしPolyfilterをっかぅとしても、<br>ちょっとしたTipsがぃろ②でてきました<br>なので、ぁぇてPolyfilterをっかゎなぃで、CSSだけでかぃてみました<br>それがこれです</p>
<p><code data-gist-id="7644528" data-gist-file="invert.css"><a href="https://gist.github.com/ayapi/7644528#file-invert-css">https://gist.github.com/ayapi/7644528#file-invert-css</a></code></p>
<p>ぃったぃなにをゃってるのかってことと、<br>Webkit, Mozilla, Microsoftそれぞれにぉぃて<br>少し踏み込んだ内容をかきます</p>
<p><a href="/posts/colorinvertcssonwebkit">階調反転フィルターCSS Webkit編</a><br><a href="/posts/colorinvertcssonmozilla">階調反転フィルターCSS Mozilla編</a><br><a href="/posts/colorinvertcssonmicrosoft">階調反転フィルターCSS Microsoft編</a></p>
]]></description><link>http://ayapi.github.io/posts/colorinvertcss/</link><guid isPermaLink="true">http://ayapi.github.io/posts/colorinvertcss/</guid><category><![CDATA[CSS]]></category><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[ぁゃぴ]]></dc:creator><pubDate>Mon, 25 Nov 2013 16:02:00 GMT</pubDate></item><item><title><![CDATA[grunt-gitでGruntにGitコマンドをまとめる]]></title><description><![CDATA[<p><a href="https://github.com/rubenv/grunt-git">grunt-git</a>ゎ、なまぇのとーり、<br>Gitコマンドをかんたんに<a href="http://gruntjs.com/">Grunt</a>タスクとして扱ぇます</p>
<p>ぁゃぴがなんで使ってみょーかと思ったかってゅーと、<br>ぁゃぴゎこのブログでゎ、GitHubに、2個のリポジトリがぁり、</p>
<p>①<a href="https://github.com/CabinJS/Cabin">CabinJS</a>のソースファイルを置ぃとくリポジトリ<br>②ビルドしたファイルをGitHub Pages用にデプロイしとくリポジトリ</p>
<p>これでたとぇば、①に記事を書ぃて<code>git push</code>するのを、<br>元からぁる、ビルドして②にデプロイするgruntタスクに、<br>統合したぃと考ぇました<br>どっちかだけをゃって差分が出るってゅーのをなくしたぃからです</p>
<p>ゃったことゎかんたんで、<br>grunt-gitをぃっものコマンドでインストールし、</p>
<pre><code class="lang-bash"><div class="highlight"><pre>npm install grunt-git --save-dev
</pre></div>
</code></pre>
<p>ぁとゎGruntfile.jsにタスクを追加するだけです<br><a href="https://github.com/ayapi/ayapi-cabin/commit/0b28637d332fd5d232d688c5080e12ce5041931a">fix #31 ayapi-cabinにpushしたら自動でayapi.github.ioにデプロイするょーにしくみをっくる</a><br>↑すさまじくゎかりゃすぃと思ぃます</p>
<p>今回の場合、GitのHooksを使って実現することもできると思ぅんですけど、<br>pushのhookゎWebサーバーを用意しなぃとできなぃっぽぃですょね？<br>できるのかな？ちょっとしらべたんですけど、<br>なんかできなさげエアーだったので、<br>手軽なところでGruntで完結できるょーにしました</p>
<p>ほかに考ぇられる用途としてゎ、<br>ビルド以外にも、テストを走らせるなどで、<br>それがぉゎったら<code>git push</code>する、とかです</p>
<p>って、<code>git push</code>のことばっかかぃてますが、<br><code>git commit</code>、<code>git stash</code>、など、<br>てか、READMEみる限り、大概のことゎできそーなかんじです</p>
<p>なので、まだためしてませんが、<br><code>git stash</code>の後にビルド+LiveReloadさせ、<br>コミット漏れがなぃかを確認するGruntタスクを作ったりとか、<br>そーゅー使ぃ方もできるかなーと考ぇてぃます</p>
<p>複合タスク系ばっか挙げましたが、<br>単純に長くてぉぼぇるのがたぃへんなGitコマンドを単体で、<br>ゎかりゃすぃ名前のGruntタスクにしとく、とかもぃぃと思ぃます</p>
]]></description><link>http://ayapi.github.io/posts/gruntgit/</link><guid isPermaLink="true">http://ayapi.github.io/posts/gruntgit/</guid><category><![CDATA[Git]]></category><category><![CDATA[Grunt]]></category><category><![CDATA[Node]]></category><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[ぁゃぴ]]></dc:creator><pubDate>Sat, 23 Nov 2013 11:48:00 GMT</pubDate></item></channel></rss>