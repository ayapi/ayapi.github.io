<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[ayapi.github.io]]></title><description><![CDATA[ぁゃぴがプログラミングのことをかくブログ]]></description><link>http://ayapi.github.io</link><generator>RSS for Node</generator><lastBuildDate>Sat, 17 May 2014 06:27:06 GMT</lastBuildDate><atom:link href="http://ayapi.github.io/feed.xml" rel="self" type="application/rss+xml"/><author><![CDATA[ぁゃぴ]]></author><pubDate>Sat, 17 May 2014 06:27:06 GMT</pubDate><copyright><![CDATA[2014 ぁゃぴ]]></copyright><language><![CDATA[en]]></language><managingEditor><![CDATA[ぁゃぴ]]></managingEditor><webMaster><![CDATA[ぁゃぴ]]></webMaster><ttl>60</ttl><item><title><![CDATA[六本木Hackers Barでハッカーにライブコーディングゃってもらった]]></title><description><![CDATA[<p><img src="/images/hackersbar.jpg" alt="Hackers Bar"></p>
<h2><a name="hackers-bar%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%AB%EF%BC%9F" class="anchor" href="#hackers-bar%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%AB%EF%BC%9F"><span class="header-link"></span></a>Hackers Barってなに？</h2>
<blockquote>
<p><cite><a href="http://hackersbar.net/">Hackers Bar</a></cite><br>六本木にハッカーがおもてなしをするバーが誕生します。<br>「Hackers Bar」は、ハッカーのプログラミングライブや<br>ビジネスメイキングを楽しむ空間です。</p>
</blockquote>
<p>ぁゃしすぎだし、まじで営業してんの！？って半信半疑で行ってみたら、<br>まじで営業してたｗ　存在してたｗｗｗｗ</p>
<p>ぉ店自体のくゎしぃレポゎねとらぼにも載ったみたぃ<br><a href="http://nlab.itmedia.co.jp/nl/articles/1405/16/news148.html">カクテル名が「ブルースクリーン」「スパゲッティ」って不吉すぎるでしょ！　六本木にできた「Hackers Bar」行ってきた - ねとらぼ</a></p>
<h2><a name="%E3%82%83%E3%81%A3%E3%81%A6%E3%82%82%E3%82%89%E3%81%A3%E3%81%9F%E3%83%A9%E3%82%A4%E3%83%96%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0" class="anchor" href="#%E3%82%83%E3%81%A3%E3%81%A6%E3%82%82%E3%82%89%E3%81%A3%E3%81%9F%E3%83%A9%E3%82%A4%E3%83%96%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0"><span class="header-link"></span></a>ゃってもらったライブコーディング</h2>
<p>弟が、ぁゃぴにソファーをくれるって言ってて、<br>ゃったーってかんじなんだけど、③人掛けでまじデカぃっぽぃ！<br>ぉ部屋の㊥ゎだぃじょぶっぽぃんだけど、<br>運ばれてくる時、マンションのエレベーターにちゃんと入るのかな？</p>
<p>…ってことで、それを計算したくて／(^o^)＼</p>
<p>ぁゃぴ、3Dゎかんなぃ！むり！ってなってたけど、<br>この問題ゎ2Dで考ぇれるみたぃで、ょーするにこーゅーことみたぃ</p>
<p><img src="/images/elevator.png" alt="エレベーターとソファーの側面図"></p>
<p>この三角関数の図までゎ用意してぉぃて、それをみせて、<br>XYxyの各変数の数値を入力したら、エレベーターにソファーが<br>載る・載らなぃをぉしぇてくれるプログラムをかぃてもらった</p>
<h2><a name="%E3%83%A9%E3%82%A4%E3%83%96%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E6%83%B3%E3%81%83%E3%81%8C%E6%BF%80%E3%82%A2%E3%83%84" class="anchor" href="#%E3%83%A9%E3%82%A4%E3%83%96%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B%E6%83%B3%E3%81%83%E3%81%8C%E6%BF%80%E3%82%A2%E3%83%84"><span class="header-link"></span></a>ライブコーディングに対する想ぃが激アツ</h2>
<p>Hackers Barのハッカーの中尾氏ゎ、PerlとPHPをかけて、<br>特にPerlがガチなんだそーです<br>けど今回ゎぁゃぴも読めるPHPでかぃてくれました<br>viでひたすらかぃてました</p>
<p><img src="/images/hackersbar_hacker.jpg" alt="ライブコーディング㊥"></p>
<p>そも②ライブコーディングを披露するため、<br>それをぃちばんの目的としてぉ店をぃきなり買収したっぽぃし、<br>ぉ店満席でかなりぃそがしそーなのに、すごぃ勢ぃでコーディングｗ</p>
<p>ぁゃぴが画面みながらてきとうに、<br>「<code>deg2rad()</code>ぉなじ引数で何回もゃってるのゎ変数にしたほーがみゃすぃっすね」<br>「<code>for</code>文中で①回<code>true</code>出たらもぅ<code>break</code>しちゃったほーがょくなぃっすか」<br>とか言ってたら、</p>
<p>「鋭ぃｗｗｗ<br>　ライブコーディングゎエンターテイメントだからね！<br>　そーゅーツッコミがぁってこそだよ！」<br>とか言ってて、なんかょろこんでもらぇたみたぃ／(^o^)＼</p>
<p><img src="/images/hackersbar_display.jpg" alt="エレベータークラスｗ"></p>
<h2><a name="hackers-bar%E3%81%AE%E3%81%9F%E3%81%AE%E3%81%97%E3%81%95" class="anchor" href="#hackers-bar%E3%81%AE%E3%81%9F%E3%81%AE%E3%81%97%E3%81%95"><span class="header-link"></span></a>Hackers Barのたのしさ</h2>
<p>なにげ、自分以外の人がコーディングしてるとこを<br>じっと観察するってこと自体レアだと思ぃます<br>しかもぉ酒飲みながらてきとうにぉもしろがってればぃぃ、ってゅー</p>
<p>その場でApacheの設定とかもゃりはじめたり、<br>なんかスピード感がすごぃｗ<br>ぁゃぴゎなんでも考ぇ込んじゃぅから、ぁの即興感ゎすごぃと思ぃました</p>
<p>最終的に動ぃた時にゎ、ぁゃぴもテンションMAXで大騒ぎ＼(^o^)／</p>
<p>PHPでもぉもしろかったけど、ぁゃぴゎPerlゎかんなぃから、<br>今度ゎPerlでかぃてもらぇば、<br>逆に「Perlってこぅなんだな」って勉強になるだろーなと思ぃましたし</p>
<p>PHPでも、フレームワークを目新しぃの使ってみたりしてくれたら<br>さらにアゲ②になっちゃぃそー↑↑</p>
<p>できたプログラムゎ、後日、ちょっと見た目とか整ぇた㊤で、<br><a href="http://hackersbar.net/products/hb3/">ここ</a>で公開してくれる予定だそーです</p>
<p><img src="/images/hackersbar_bluescreen.jpg" alt="オリジナルカクテル「ブルースクリーン」"></p>
]]></description><link>http://ayapi.github.io/posts/hackersbar/</link><guid isPermaLink="true">http://ayapi.github.io/posts/hackersbar/</guid><category><![CDATA[PHP]]></category><dc:creator><![CDATA[ぁゃぴ]]></dc:creator><pubDate>Sat, 17 May 2014 06:26:00 GMT</pubDate></item><item><title><![CDATA[「開発効率をUPする Git逆引き入門」ゎSourceTreeの逆引きリファレンスとしてょさげ]]></title><description><![CDATA[<p>なんか<a href="http://layzie.hatenablog.com/">id:Layzie</a>さんからGitの本もらぃました<br>こーゅーの、「献本」ってゅーみたぃなんですけど</p>
<div class="group"><a class="amazon-image" href="http://www.amazon.co.jp/gp/product/4863541465/ref=as_li_tf_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4863541465&linkCode=as2&tag=upgradeayp-22"><img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=4863541465&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=upgradeayp-22" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=upgradeayp-22&l=as2&o=9&a=4863541465" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /><a href="http://www.amazon.co.jp/gp/product/4863541465/ref=as_li_tf_tl?ie=UTF8&camp=247&creative=1211&creativeASIN=4863541465&linkCode=as2&tag=upgradeayp-22">開発効率をUPする Git逆引き入門</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=upgradeayp-22&l=as2&o=9&a=4863541465" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /><br>著者: 株式会社サイバーエージェント<br>松下雅和, 船ヶ山慶, 平木聡, 土橋林太郎, 三上丈晴<br>出版社: Ｃ＆Ｒ研究所<br>発売日: 2014/04/09</div>

<p>ぁゃぴゎプログラマーだしGitのコマンドも普通に打っし、<br>まぁ②そこ②ゎかってる系です(ゃたら詳しぃゎけでもなぃけど)</p>
<p>けど、</p>
<blockquote>
<p>エンジニアだけではなくデザイナーさんなどにも優しい感じにはなっているかと思います。<br><cite><a href="http://layzie.hatenablog.com/entry/20140403/1396509428">『開発効率をUPする Git逆引き入門』という本を執筆しました - Life goes on</a></cite></p>
</blockquote>
<p>とのことで、ノンプログラマーにGitをっかってもらぅことにっぃて、<br>ぁゃぴゎ前から興味がぁるから、その視点からかきます</p>
<p>結論から言ぅと、</p>
<p>ノンプログラマーにゎ、この本だけでGit入門＆導入ゎ<br>難しぃんじゃなぃかなって思ぅんですけど、<br>SourceTreeの逆引きリファレンスとして優秀で、<br>作業をはじめた時に常に手元に置ぃてもらぅ本としてオススメできる<br>って思ぃました</p>
<h2><a name="%E3%81%BB%E3%81%8B%E3%81%AEgit%E6%9C%AC%E3%81%A8%E3%81%AE%E3%81%A1%E3%81%8C%E3%81%83" class="anchor" href="#%E3%81%BB%E3%81%8B%E3%81%AEgit%E6%9C%AC%E3%81%A8%E3%81%AE%E3%81%A1%E3%81%8C%E3%81%83"><span class="header-link"></span></a>ほかのGit本とのちがぃ</h2>
<p>ぁゃぴゎ、<br>技術評論社から出てる「<a href="http://www.amazon.co.jp/gp/product/477415184X/ref=as_li_tf_tl?ie=UTF8&camp=247&creative=1211&creativeASIN=477415184X&linkCode=as2&tag=upgradeayp-22">Gitポケットリファレンス</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=upgradeayp-22&l=as2&o=9&a=477415184X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />」を、<br>2012年夏に<a href="http://cynipe.hateblo.jp/">id:cynipe</a>さんにオススメ頂ぃて、既に持ってます</p>
<p>ただ、ポケリファのほーゎ、<br>もぅちょぃ細かぃことまでかぃてぁる系で、<br>今回の「Git逆引き入門」ゎ、かんたんさ重視です</p>
<h2><a name="%E3%81%9D%E3%82%8C%E3%81%A7%E3%82%82git%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98%E3%81%AE%E8%AA%AC%E6%98%8E%E3%82%8E%E9%9B%A3%E3%81%97%E3%81%83" class="anchor" href="#%E3%81%9D%E3%82%8C%E3%81%A7%E3%82%82git%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98%E3%81%AE%E8%AA%AC%E6%98%8E%E3%82%8E%E9%9B%A3%E3%81%97%E3%81%83"><span class="header-link"></span></a>それでもGitの基礎知識の説明ゎ難しぃ</h2>
<p>最初の最初にGitの基本的な仕組みを解説してる部分ゎ、<br>ちょっとゃっぱプログラマー向けってかんじで、<br>人にょってゎ、ぃきなりこれだと難しぃだろーなと思ぃました</p>
<p>たとぇば、これこの本に限らずだと思ぅんですけど、<br>Gitの説明って、SVNとくらべる文章が結構でてきます<br>けどなにげSVNゎからなぃって人も多くぃると思ぅんです<br>そーゅー人にゎ、逆にSVNの説明が冗長になる<br>べっにSVNゎかんなくても、Gitゎっかぇるのに</p>
<p>なので、基礎知識ってかGitの概要の部分ゎ、<br>特にノンプログラマーにゎ、最初ゎこの本でゎなく、<br><a href="http://www.backlog.jp/git-guide/intro/intro1_1.html">サルでもわかるGit入門 ~バージョン管理を使いこなそう～:入門編:Gitの基本</a><br>とかみてもらぅのがぃぃかなとか思ぃました</p>
<h2><a name="%E4%BD%9C%E6%A5%AD%E3%81%AE%E6%B5%81%E3%82%8C%E3%81%AE%E8%AA%AC%E6%98%8E%E3%82%8E%E3%82%8E%E3%81%8B%E3%82%8A%E3%82%83%E3%81%99%E3%81%83" class="anchor" href="#%E4%BD%9C%E6%A5%AD%E3%81%AE%E6%B5%81%E3%82%8C%E3%81%AE%E8%AA%AC%E6%98%8E%E3%82%8E%E3%82%8E%E3%81%8B%E3%82%8A%E3%82%83%E3%81%99%E3%81%83"><span class="header-link"></span></a>作業の流れの説明ゎゎかりゃすぃ</h2>
<blockquote>
<p>新しく「簡単なサイトを作る」というプロジェクトをはじめることになりました。</p>
</blockquote>
<p>って書き出しで、htmlとcssのファイルを<br>Gitで管理してく流れがかかれてます</p>
<p>これゎhtmlとかゎかる人にゎキャッチーでぃぃと思ぃました<br>逆にこれを先にみながら、<br>出てきたゎかんなぃ単語のページをみてもらぅ、<br>ってかんじにしてもぃぃかなって思ぃます</p>
<h2><a name="sourcetree%E9%80%86%E5%BC%95%E3%81%8D%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9%E3%81%A8%E3%81%97%E3%81%A6%E6%BF%80%E3%82%A2%E3%83%84" class="anchor" href="#sourcetree%E9%80%86%E5%BC%95%E3%81%8D%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9%E3%81%A8%E3%81%97%E3%81%A6%E6%BF%80%E3%82%A2%E3%83%84"><span class="header-link"></span></a>SourceTree逆引きリファレンスとして激アツ</h2>
<p>GitのGUIツール<a href="http://www.sourcetreeapp.com/">SourceTree</a>での操作を<br>ぃち②載せまくってるのが激アツで、<br>ノンプログラマーにゎ、そこだけみてもらぇばぃーと思ぃます<br>そこに、この本の価値がぁると思ぃます</p>
<p>最初の「Gitの基礎知識」と最後の「付録」以外のページゎ<br>ほとんどぜんぶ、逆引きリファレンスです<br>コマンドラインとSourceTreeの操作両方が載ってます</p>
<h2><a name="%E3%81%89%E3%82%8E%E3%82%8A%E3%81%AB" class="anchor" href="#%E3%81%89%E3%82%8E%E3%82%8A%E3%81%AB"><span class="header-link"></span></a>ぉゎりに</h2>
<p>てゅーゎけで、ノンプログラマーにゎ、<br>導入の部分で挫折しなぃょーに気をっけてもらぃ、<br>SourceTreeの逆引きリファレンスとして、買ったらぃぃと思ぃました</p>
<p>プログラマーでぁっても、<br>SourceTree使ぃの人 || ぁんま細かぃことしる必要なぃ人<br>ゎ、買ったらぃぃと思ぃます</p>
<div class="group"><a class="amazon-image" href="http://www.amazon.co.jp/gp/product/4863541465/ref=as_li_tf_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4863541465&linkCode=as2&tag=upgradeayp-22"><img border="0" src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=4863541465&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=upgradeayp-22" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=upgradeayp-22&l=as2&o=9&a=4863541465" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /><a href="http://www.amazon.co.jp/gp/product/4863541465/ref=as_li_tf_tl?ie=UTF8&camp=247&creative=1211&creativeASIN=4863541465&linkCode=as2&tag=upgradeayp-22">開発効率をUPする Git逆引き入門</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=upgradeayp-22&l=as2&o=9&a=4863541465" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /><br>著者: 株式会社サイバーエージェント<br>松下雅和, 船ヶ山慶, 平木聡, 土橋林太郎, 三上丈晴<br>出版社: Ｃ＆Ｒ研究所<br>発売日: 2014/04/09</div>

<h2><a name="%E3%81%89%E3%81%BE%E3%81%91%3A%E7%9F%A2%E5%8D%B0%E3%81%AE%E5%90%91%E3%81%8D" class="anchor" href="#%E3%81%89%E3%81%BE%E3%81%91%3A%E7%9F%A2%E5%8D%B0%E3%81%AE%E5%90%91%E3%81%8D"><span class="header-link"></span></a>ぉまけ:矢印の向き</h2>
<p>もしかしたらぁゃぴだけかもしれなぃんですけど、<br>矢印の向きの意味がょくゎかりませんでした</p>
<p><img src="/images/git_arrow.jpg" alt="矢印の例"></p>
<p>なんかこーゅーかんじの図が何回もでてくるんですけど、<br>ほかの本とかサイトだと、<br>この場合、ただの棒線か「→」じゃなぃですか？</p>
<p>なんか「←」だとAが最新みたぃに思っちゃぅんですけど<br>ぁゃぴがヘンなのかな？？</p>
]]></description><link>http://ayapi.github.io/posts/bookreviewgit/</link><guid isPermaLink="true">http://ayapi.github.io/posts/bookreviewgit/</guid><category><![CDATA[Git]]></category><dc:creator><![CDATA[ぁゃぴ]]></dc:creator><pubDate>Fri, 04 Apr 2014 20:18:00 GMT</pubDate></item><item><title><![CDATA[JSオジサン＃1 LT「node-webkitとchrome-remote-interfaceでブラウザオートメーション」]]></title><description><![CDATA[<p>渋谷21Cafeで開催された、「<a href="http://atnd.org/events/48368">JSオジサン ＃1</a>」<br>ぁゃぴ、⑤分間のLTとゅーことで、人生初プレゼンさせてもらぃました</p>
<p>その時に映してもらってたスライドと、<br>ぁとで反省するために自分で録音をしてたから、それを公開します</p>
<div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/HatanoAya/js1-32817077" title="node-webkit &amp; chrome-remote-interfaceでブラウザオートメーション" target="_blank">slideshare: node-webkit &amp; chrome-remote-interfaceでブラウザオートメーション</a> </strong></div><iframe src="http://www.slideshare.net/slideshow/embed_code/32817077?rel=0" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe><br><br><iframe width="100%" height="166" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/141721359&amp;color=ff00db&amp;auto_play=false&amp;hide_related=false&amp;show_artwork=true"></iframe><br><br>↓LT㊥の㊢メを撮って頂ぃてました＼(^o^)／<br><br><img src="/images/jsojisan1_ayp_lt2.jpg" alt="JSオジサンぁゃぴLT"><br><br>↓21cafeのFaceBookページにぃっぱぃ載せてもらってました＼(^o^)／<br><div id="fb-root"></div> <script>(function(d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (d.getElementById(id)) return; js = d.createElement(s); js.id = id; js.src = &quot;//connect.facebook.net/ja_JP/all.js#xfbml=1&quot;; fjs.parentNode.insertBefore(js, fjs); }(document, &#39;script&#39;, &#39;facebook-jssdk&#39;));</script><br><div class="fb-post" data-href="https://www.facebook.com/photo.php?fbid=480810265351902&amp;set=a.480808168685445.1073741832.384656594967270&amp;type=1" data-width="600"><div class="fb-xfbml-parse-ignore"><a href="https://www.facebook.com/photo.php?fbid=480810265351902&amp;set=a.480808168685445.1073741832.384656594967270&amp;type=1">投稿</a> by <a href="https://www.facebook.com/21cafe.shibuya">21cafe＜ニイイチカフェ＞</a>.</div></div><br><div id="fb-root"></div> <script>(function(d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (d.getElementById(id)) return; js = d.createElement(s); js.id = id; js.src = &quot;//connect.facebook.net/ja_JP/all.js#xfbml=1&quot;; fjs.parentNode.insertBefore(js, fjs); }(document, &#39;script&#39;, &#39;facebook-jssdk&#39;));</script><br><div class="fb-post" data-href="https://www.facebook.com/photo.php?fbid=480810535351875&amp;set=a.480808168685445.1073741832.384656594967270&amp;type=1" data-width="600"><div class="fb-xfbml-parse-ignore"><a href="https://www.facebook.com/photo.php?fbid=480810535351875&amp;set=a.480808168685445.1073741832.384656594967270&amp;type=1">投稿</a> by <a href="https://www.facebook.com/21cafe.shibuya">21cafe＜ニイイチカフェ＞</a>.</div></div><br><div id="fb-root"></div> <script>(function(d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (d.getElementById(id)) return; js = d.createElement(s); js.id = id; js.src = &quot;//connect.facebook.net/ja_JP/all.js#xfbml=1&quot;; fjs.parentNode.insertBefore(js, fjs); }(document, &#39;script&#39;, &#39;facebook-jssdk&#39;));</script><br><div class="fb-post" data-href="https://www.facebook.com/photo.php?fbid=480810562018539&amp;set=a.480808168685445.1073741832.384656594967270&amp;type=1" data-width="600"><div class="fb-xfbml-parse-ignore"><a href="https://www.facebook.com/photo.php?fbid=480810562018539&amp;set=a.480808168685445.1073741832.384656594967270&amp;type=1">投稿</a> by <a href="https://www.facebook.com/21cafe.shibuya">21cafe＜ニイイチカフェ＞</a>.</div></div>


<p>↓ぁの有名な、おだんみつさんと一緒に㊢メ撮って頂きました＼(^o^)／</p>
<p><img src="/images/odanmitsu_ayapi.jpg" alt="おだんみつさんとぁゃぴ"></p>
<p>↓おだんみつさんのまとめページ<br><a href="http://matome.naver.jp/odai/2139520716110081501">IT業界で密かに話題…エンジニアに萌えるお姉さん『おだんみつ』って誰？</a></p>
]]></description><link>http://ayapi.github.io/posts/jsojisan1/</link><guid isPermaLink="true">http://ayapi.github.io/posts/jsojisan1/</guid><category><![CDATA[JavaScript]]></category><category><![CDATA[Node]]></category><dc:creator><![CDATA[ぁゃぴ]]></dc:creator><pubDate>Thu, 27 Mar 2014 17:05:00 GMT</pubDate></item><item><title><![CDATA[node-retryとasync.seriesをっかって非同期逐次処理の再試行]]></title><description><![CDATA[<p>Node.jsにぉぃて、非同期で取ってきたデータを基にして、<br>また更に非同期処理をして、成功したらまた非同期処理をして、<br>とかゅーのを考ぇます</p>
<h2><a name="caolan/async%E3%81%A7%E9%80%90%E6%AC%A1%E5%87%A6%E7%90%86%E3%82%92%E3%81%8B%E3%81%83%E3%81%A6%E3%81%BF%E3%82%8B" class="anchor" href="#caolan/async%E3%81%A7%E9%80%90%E6%AC%A1%E5%87%A6%E7%90%86%E3%82%92%E3%81%8B%E3%81%83%E3%81%A6%E3%81%BF%E3%82%8B"><span class="header-link"></span></a>caolan/asyncで逐次処理をかぃてみる</h2>
<p>この場合のコントロールフローとしてゎ<br><a href="https://github.com/caolan/async">caolan/async</a>の<code>series()</code>ゃ<code>waterfall()</code>がぃぃと思ぃます</p>
<pre><code class="lang-bash"><div class="highlight"><pre>npm install async --save
</pre></div>
</code></pre>
<p><code>async.series()</code>をっかってかくと、こんなふうになります</p>
<p><code data-gist-id="9257773" data-gist-hide-footer="true" data-gist-hide-line-numbers="true"><a href="https://gist.github.com/ayapi/9257773">https://gist.github.com/ayapi/9257773</a></code></p>
<p>サンプルなので<code>setTimeout()</code>で結果を渡すょーにしてますが、<br>実際にゎ、httpリクエストとかのコールバックで<code>done</code>を呼びます</p>
<p><code>get</code>が1秒後に成功してから、<code>send</code>が実行されます<br>けど<code>send</code>でゎ1秒後に必ずエラーが発生して、<br><code>save</code>ゎ実行されずにぉゎり、とゅーかんじです</p>
<p>出力ゎ以下のょーになります</p>
<pre><code class="lang-bash"><div class="highlight"><pre>get
send
send:failed
</pre></div>
</code></pre>
<h2><a name="node-retry%E3%81%A7%E5%86%8D%E8%A9%A6%E8%A1%8C%E5%87%A6%E7%90%86%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B" class="anchor" href="#node-retry%E3%81%A7%E5%86%8D%E8%A9%A6%E8%A1%8C%E5%87%A6%E7%90%86%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B"><span class="header-link"></span></a>node-retryで再試行処理を追加する</h2>
<p>ネットワークが不安定だったりすると、リトライ処理をしたくなります<br>成功するまで何回もゃらせて、けどN回連続で失敗したら、<br>ちょっともぅぁきらめる、ってかんじのゃっです</p>
<p><a href="https://github.com/tim-kos/node-retry">tim-kos/node-retry</a>ゎ、<br>日本語の情報がほとんどなぃんですけど、<br>リトライ処理をかんたんにかけるライブラリです</p>
<p>これをっかって、さっきの<code>async.series()</code>のコードに<br>再試行処理を追加してみます</p>
<pre><code class="lang-bash"><div class="highlight"><pre>npm install retry --save
</pre></div>
</code></pre>
<p>オプションで、再試行回数の上限と、<br>失敗してから再試行するまでにちょっと時間を空けるってゅー、<br>待ち時間に関する設定ができます</p>
<p>再試行の回数が増ぇてぃくごとに、<br>待ち時間を長くしてぃくょーな挙動がデフォルトみたぃです<br>ぁたまぃぃーって思ぃます↑</p>
<p>けど今回ゎ「そーゅーのぃぃから」ってなったので、なしにしてみます</p>
<p><code data-gist-id="9256588" data-gist-line="2,22-26" data-gist-hide-line-numbers="true"><a href="https://gist.github.com/ayapi/9256588#file-retryseries-js-L22-L26">https://gist.github.com/ayapi/9256588#file-retryseries-js-L22-L26</a></code></p>
<p>今回のサンプルだと、<code>send</code>で失敗するまでに、<br><code>get</code>で取ってこれるデータの状態が変ゎってるかもしれなぃ、<br>とか考ぇはじめると、<code>send</code>で失敗しちゃった時にゎ、<br>最初に戻ってゃり直したぃ、ってなったりします</p>
<p>そーゅーのゎ、<code>async.series()</code>をまるごと、<br><code>operation.attempt()</code>に入れたらできます</p>
<p><code data-gist-id="9256588" data-gist-line="28-40" data-gist-hide-line-numbers="true"><a href="https://gist.github.com/ayapi/9256588#file-retryseries-js-L28-L40">https://gist.github.com/ayapi/9256588#file-retryseries-js-L28-L40</a></code></p>
<p><code>operation.retry(err)</code>ゎ、<br>引数<code>err</code>にエラーオブジェクトが渡された時にゎ、<br>再試行回数の上限をチェックして、<br>まだゃるなら<code>true</code>、ぁきらめるなら<code>false</code>を返します<br>そして<code>true</code>なら<code>operation.attempt()</code>が再び呼ばれます</p>
<p>引数<code>err</code>がエラーオブジェクトじゃなぃ時ゎ、<br><code>false</code>を返します</p>
<p>っまり、<code>false</code>が返る時ゎ、<br>結果ゎどーぁれ、ぉゎる時、とゅーことです</p>
<p><code>operation.mainError()</code>ゎ、ぃちばん多くでたエラーを返すみたぃです<br><code>error.message</code>の内容にょってカウントしてるみたぃです<br>今回ゎ毎回<code>&#39;send:failed&#39;</code>なのでぁんまり意味なぃですけど、<br>実際にっかぅ時ゎ、<br>試行回数が重なればエラーの内容もちがぅ場合もぁりぇますので<br>こーゅー便利メソッドが用意されてるみたぃです</p>
<h2><a name="%E5%AE%8C%E6%88%90%E3%81%B0%E3%82%93" class="anchor" href="#%E5%AE%8C%E6%88%90%E3%81%B0%E3%82%93"><span class="header-link"></span></a>完成ばん</h2>
<p>てことで、かけたコードゎこれです＼(^o^)／</p>
<p><code data-gist-id="9256588"><a href="https://gist.github.com/ayapi/9256588">https://gist.github.com/ayapi/9256588</a></code></p>
<p>出力ゎ以下のょーになります</p>
<pre><code class="lang-bash"><div class="highlight"><pre>get
send
get
send
get
send
get
send
get
send
send:failed
</pre></div>
</code></pre>
]]></description><link>http://ayapi.github.io/posts/retryseries/</link><guid isPermaLink="true">http://ayapi.github.io/posts/retryseries/</guid><category><![CDATA[Node]]></category><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[ぁゃぴ]]></dc:creator><pubDate>Thu, 27 Feb 2014 19:21:00 GMT</pubDate></item><item><title><![CDATA[メールをトリガーにした処理がかんたんにかけるNode.jsの「inbox」]]></title><description><![CDATA[<p>今回ゎとてもひさびさに、メール受信時にその内容を処理するってゅー、<br>ぃゎゅる空メール登録みたぃな、ぁれが必要になりました</p>
<p>まじ大昔にqmailとphpのパイプでそのへんがんばってたことがぁって、<br>そのゃりかたゎなんとなく今でもぉぼぇてるんですけど、<br>Node.jsでIMAPでとてもかんたんに似たょーなのがかけたから、<br>ゃりかたをちょっとかきます</p>
<h2><a name="imapnode-js" class="anchor" href="#imapnode-js"><span class="header-link"></span></a>IMAPを扱ぅNode.jsライブラリ</h2>
<p><a href="https://github.com/mscdex/node-imap">node-imap</a>とゅーのがメジャーっぽぃんですけど、<br>けど<a href="https://github.com/andris9/inbox">inbox</a>のほーが、ぱっとゎかりゃすかったから、<br>こっちをっかってみることにしました</p>
<h2><a name="inbox" class="anchor" href="#inbox"><span class="header-link"></span></a>inboxをっかってみる</h2>
<p>まずゎインストールですけど、むずかしぃことゎなにもぁりません</p>
<pre><code class="lang-bash"><div class="highlight"><pre>npm install inbox --save
</pre></div>
</code></pre>
<p>それで、IMAP接続して、メールボックスを開くょーにします</p>
<p><code data-gist-hide-line-numbers="true" data-gist-id="8770396" data-gist-line="1-16,44"><a href="https://gist.github.com/ayapi/8770396#file-imapandsmtp-js-L1-L16">https://gist.github.com/ayapi/8770396#file-imapandsmtp-js-L1-L16</a> <a href="https://gist.github.com/ayapi/8770396#file-imapandsmtp-js-L44">https://gist.github.com/ayapi/8770396#file-imapandsmtp-js-L44</a></code></p>
<p>で、inboxゎ、ぁたらしぃメールがくると、<br><code>new</code>イベントを<code>emit</code>してくれます</p>
<p><code data-gist-hide-line-numbers="true" data-gist-id="8770396" data-gist-line="18-22,42"><a href="https://gist.github.com/ayapi/8770396#file-imapandsmtp-js-L1-L16">https://gist.github.com/ayapi/8770396#file-imapandsmtp-js-L1-L16</a> <a href="https://gist.github.com/ayapi/8770396#file-imapandsmtp-js-L42">https://gist.github.com/ayapi/8770396#file-imapandsmtp-js-L42</a></code></p>
<p>たったこれだけでかんたんです</p>
<p>ほかにも、このままだとメールがひたすらたまってぃっちゃぅから、<br>消す処理とかゎ必要なんですけど</p>
<h2><a name="nodemailer" class="anchor" href="#nodemailer"><span class="header-link"></span></a>ぉまけ：Nodemailerで返事をだすょーにしてみる</h2>
<p>受信＆保存するだけだと「は？なに？」ってかんじなので、<br>てきとーにSMTPで返事をだすょーにしてみます<br>inboxと同じ作者さんで<a href="https://github.com/andris9/Nodemailer">Nodemailer</a>てゅーメール送信のライブラリがぁります</p>
<pre><code class="lang-bash"><div class="highlight"><pre>npm install nodemailer --save
</pre></div>
</code></pre>
<p><code data-gist-hide-line-numbers="true" data-gist-id="8770396" data-gist-line="18-42"><a href="https://gist.github.com/ayapi/8770396#file-imapandsmtp-js-L1-L16">https://gist.github.com/ayapi/8770396#file-imapandsmtp-js-L1-L16</a></code></p>
<p>かんたんすぎじゃん＼(^o^)／</p>
<h2><a name="" class="anchor" href="#"><span class="header-link"></span></a>まとめ</h2>
<p>このょーに、fromアドレスを拾ぅだけでぁれば、とてもかんたんです</p>
<p>IMAPに対応してるメールアカウントがぁればそれでょくて、<br>メールサーバー側のほーの設定が特にぃらなぃから、ぉ手軽なかんじがします</p>
<h2><a name="" class="anchor" href="#"><span class="header-link"></span></a>更に突っ込んでぃくなら</h2>
<p>もしたとぇばメールの内容でブログを投稿するみたぃな、<br>メールのタイトルゃ本文の内容をなにかしょーとするなら<br>まぁもぅこれぉ決まりなんですけど、<br>メールのストラクチャのパーシングと、<br>日本語特有の文字エンコード関係の処理に<br>果敢に立ち向かぅ必要がぁりますので、多少ハードルゎぁがります<br>気が向ぃたらそのへんも、今度かくかもしれません</p>
<p>なんかphpにゎマルチバイト文字列の変換の関数が<br>しっかり用意されてたのがょかったなーって思ぃますけど、<br>Node.jsゎそのへんちょっとたぃへんかも</p>
]]></description><link>http://ayapi.github.io/posts/observingimaponnode/</link><guid isPermaLink="true">http://ayapi.github.io/posts/observingimaponnode/</guid><category><![CDATA[Node]]></category><category><![CDATA[JavaScript]]></category><dc:creator><![CDATA[ぁゃぴ]]></dc:creator><pubDate>Sun, 02 Feb 2014 11:58:00 GMT</pubDate></item></channel></rss>